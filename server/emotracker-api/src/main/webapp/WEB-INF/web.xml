<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <display-name>Emotracker API</display-name>

    <session-config>
        <session-timeout>
            30
        </session-timeout>
    </session-config>

    <!--&lt;!&ndash; Filter for correct UTF-8 encodings &ndash;&gt;-->
    <!--<filter>-->
        <!--<filter-name>encodingFilter</filter-name>-->
        <!--<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>-->
        <!--<init-param>-->
            <!--<param-name>encoding</param-name>-->
            <!--<param-value>UTF-8</param-value>-->
        <!--</init-param>-->
        <!--<init-param>-->
            <!--<param-name>forceEncoding</param-name>-->
            <!--<param-value>true</param-value>-->
        <!--</init-param>-->
    <!--</filter>-->

    <!--<filter-mapping>-->
        <!--<filter-name>encodingFilter</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->
    <!--&lt;!&ndash; Filter for correct UTF-8 encodings ends &ndash;&gt;-->

    <!-- Filter for removing jsessionid from s:urls -->
    <filter>
        <filter-name>DisableUrlSessionFilter</filter-name>
        <filter-class>com.innerman.emotracker.web.utils.DisableUrlSessionFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>DisableUrlSessionFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- Filter for removing jsessionid from s:urls ends -->


    <!-- Spring Security filter starts -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- Spring security filter ends -->

    <!-- Spring main servlet starts -->
    <servlet>
        <servlet-name>emotracker-api</servlet-name>
        <servlet-class>
            org.springframework.web.servlet.DispatcherServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>emotracker-api</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!-- Spring main servlet ends -->

    <!-- Spring REST filter for hidden fields starts for DELETE requests -->
    <filter>
        <filter-name>hiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>hiddenHttpMethodFilter</filter-name>
        <servlet-name>emotracker-api</servlet-name>
    </filter-mapping>
    <!-- Spring REST filter for hidden fields ends -->

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/security-api.xml,
            classpath*:spring/emotracker-core.xml
        </param-value>
    </context-param>
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>../resources/log4j.properties</param-value>
    </context-param>

</web-app>
